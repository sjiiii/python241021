import sys
from PyQt5.QtWidgets import *
from PyQt5.QtCore import pyqtSlot, Qt
from PyQt5 import uic
import sqlite3
import os.path

# ProductDatabase 클래스를 같은 파일에 정의
class ProductDatabase:
    def __init__(self, db_name="ProductList.db"):
        self.db_name = db_name
        self.con = self._connect_db()
        self.cur = self.con.cursor()

    def _connect_db(self):
        if os.path.exists(self.db_name):
            return sqlite3.connect(self.db_name)
        else:
            con = sqlite3.connect(self.db_name)
            cur = con.cursor()
            cur.execute(
                "CREATE TABLE Products (id INTEGER PRIMARY KEY AUTOINCREMENT, Name TEXT, Price INTEGER);"
            )
            return con

    def add_product(self, name, price):
        self.cur.execute("INSERT INTO Products (Name, Price) VALUES(?, ?);", (name, price))
        self.con.commit()

    def update_product(self, prod_id, name, price):
        self.cur.execute("UPDATE Products SET Name = ?, Price = ? WHERE id = ?;", (name, price, prod_id))
        self.con.commit()

    def remove_product(self, prod_id):
        self.cur.execute("DELETE FROM Products WHERE id = ?;", (prod_id,))
        self.con.commit()

    def get_products(self):
        self.cur.execute("SELECT * FROM Products;")
        return self.cur.fetchall()


# UI 디자인 파일 로드
form_class = uic.loadUiType("Chap10_ProductList.ui")[0]

class DemoForm(QMainWindow, form_class):
    def __init__(self):
        super().__init__()
        self.setupUi(self)

        # 데이터베이스 클래스 인스턴스 생성
        self.db = ProductDatabase()

        # 초기값 셋팅
        self.id = 0
        self.name = ""
        self.price = 0

        # QTableWidget의 컬럼폭 셋팅
        self.tableWidget.setColumnWidth(0, 100)
        self.tableWidget.setColumnWidth(1, 200)
        self.tableWidget.setColumnWidth(2, 100)
        self.tableWidget.setHorizontalHeaderLabels(["제품ID", "제품명", "가격"])

        # 네비게이션 및 더블클릭 연결
        self.prodID.returnPressed.connect(lambda: self.focusNextChild())
        self.prodName.returnPressed.connect(lambda: self.focusNextChild())
        self.prodPrice.returnPressed.connect(lambda: self.focusNextChild())
        self.tableWidget.doubleClicked.connect(self.doubleClick)

        # 데이터 표시
        self.getProduct()

    def addProduct(self):
        name = self.prodName.text()
        price = self.prodPrice.text()
        self.db.add_product(name, price)
        self.getProduct()

    def updateProduct(self):
        prod_id = self.prodID.text()
        name = self.prodName.text()
        price = self.prodPrice.text()
        self.db.update_product(prod_id, name, price)
        self.getProduct()

    def removeProduct(self):
        prod_id = self.prodID.text()
        self.db.remove_product(prod_id)
        self.getProduct()

    def getProduct(self):
        self.tableWidget.clearContents()
        products = self.db.get_products()
        row = 0
        for item in products:
            int_as_strID = "{:10}".format(item[0])
            int_as_strPrice = "{:10}".format(item[2])

            # 제품 ID
            itemID = QTableWidgetItem(int_as_strID)
            itemID.setTextAlignment(Qt.AlignRight)
            self.tableWidget.setItem(row, 0, itemID)

            # 제품명
            self.tableWidget.setItem(row, 1, QTableWidgetItem(item[1]))

            # 가격
            itemPrice = QTableWidgetItem(int_as_strPrice)
            itemPrice.setTextAlignment(Qt.AlignRight)
            self.tableWidget.setItem(row, 2, itemPrice)

            row += 1

    def doubleClick(self):
        self.prodID.setText(self.tableWidget.item(self.tableWidget.currentRow(), 0).text())
        self.prodName.setText(self.tableWidget.item(self.tableWidget.currentRow(), 1).text())
        self.prodPrice.setText(self.tableWidget.item(self.tableWidget.currentRow(), 2).text())


if __name__ == "__main__":
    app = QApplication(sys.argv)
    demoForm = DemoForm()
    demoForm.show()
    app.exec_()
